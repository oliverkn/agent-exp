{"ast":null,"code":"var _jsxFileName = \"/Users/oliverkn/Documents/agent-exp/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [health, setHealth] = useState(null);\n  useEffect(() => {\n    const checkHealth = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/health');\n        const data = await response.json();\n        setHealth(data);\n      } catch (error) {\n        console.error('Error checking health:', error);\n      }\n    };\n    checkHealth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FastAPI + React Full Stack Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), health ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Backend Status: \", health.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", health.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading backend status...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vW+j/qGZXZr2cCUcoowjuEDqsbQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","health","setHealth","checkHealth","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","message","_c","$RefreshReg$"],"sources":["/Users/oliverkn/Documents/agent-exp/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface HealthCheck {\n  status: string;\n  message: string;\n}\n\nfunction App() {\n  const [health, setHealth] = useState<HealthCheck | null>(null);\n\n  useEffect(() => {\n    const checkHealth = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/health');\n        const data = await response.json();\n        setHealth(data);\n      } catch (error) {\n        console.error('Error checking health:', error);\n      }\n    };\n\n    checkHealth();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>FastAPI + React Full Stack Application</h1>\n        {health ? (\n          <div>\n            <p>Backend Status: {health.status}</p>\n            <p>Message: {health.message}</p>\n          </div>\n        ) : (\n          <p>Loading backend status...</p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAqB,IAAI,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,SAAS,CAACI,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBb,OAAA;MAAQY,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bb,OAAA;QAAAa,QAAA,EAAI;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9Cd,MAAM,gBACLH,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,GAAG,kBAAgB,EAACV,MAAM,CAACe,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCjB,OAAA;UAAAa,QAAA,GAAG,WAAS,EAACV,MAAM,CAACgB,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,gBAENjB,OAAA;QAAAa,QAAA,EAAG;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACf,EAAA,CAhCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}